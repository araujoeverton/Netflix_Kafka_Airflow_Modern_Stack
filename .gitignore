# Local .terraform directories
#**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#*.tfvars
#*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfvars files you do wish to add to version control using negated pattern
# !example.tfvars

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore lock files - comment this out if you want to check in the lock file
# .terraform.lock.hcl

# Ignore plan output files
*tfplan*

# Ignore .env files (used for API keys and secrets)
.env
*.env

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore any generated SSH keys
*.pem
id_rsa*
*.key

# Ignore any logs
*.log

# Python virtual environment
venv/
env/
ENV/
__pycache__/
*.py[cod]
*$py.class

# dbt specific files
target/
dbt-env/
logs/
#dbt_modules/
dbt_packages/
.user.yml

# Airflow logs and local databases
airflow/logs/
airflow/*.db
airflow/airflow.cfg
airflow/webserver_config.py

# IDE specific files
.idea/
.vscode/
*.swp
*.swo

# Confluent/Kafka specific
.confluent/